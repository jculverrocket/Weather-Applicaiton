import React, { useState, useEffect } from 'react';
import { getStationData } from '../helpers'

// import line graph stuff
import { AreaChart, linearGradient, LineChart, Line, Area, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponseContainer } from 'recharts';

const WeatherData = () => {
    const id = window.location.pathname.split("/").pop()
    const [weatherHistory, setWeatherHistory] = useState([])

    const fetchStationData = () => {
        getStationData(id)
        .then(resp => resp.json())
        .then(data => {
          setWeatherHistory(data.out_param_2.Date)
        })
        .catch(err => console.log(err))
      }
      
      useEffect(() => {
        fetchStationData()
      },[])

    //TODO: check the data being generated by the BASIC programs

    /*
    return (
        <div>
            <ul class="list-group">
                {
                    weatherHistory.map(item =>
                        {
                        return(
                            <li class="list-group-item">
                            <h5>{item.Date}</h5>
                            <p>{item.Temp} Fahrenheit </p>
                            <p>{item.TempC} Celsius</p>
                            <p>{item.Prec} Precipitation</p>
                        </li>
                        )}
                      
                    )
                }

            </ul>
        </div>
    )
    */

    //document.getElementById("id").innerHTML = id;
    /*return (
        <div>
            <h2>Station <span id="id"></span></h2>
            <ul class="LineChart">
                {
                    <LineChart
                      width={1000}
                      height={400}
                      data={weatherHistory}
                      margin={{
                        top: 5,
                        right: 30,
                        left: 20,
                        bottom: 5,
                      }}
                    >
                      <CartesianGrid strokeDasharray="3 3" />
                      <XAxis dataKey="Date"
                        label={{ value: "Dates", position: "insideBottomRight", offset: 0 }}
                        scale="band" />
                      <YAxis dataKey="Temp"
                        label={{ value: "Temperatures", angle: -90, position: "insideLeft" }} />
                      <Tooltip />
                      <Line type="monotone" dataKey="Temp" stroke="#8884d8" />
                      <Line type="monotone" dataKey="TempC" stroke="#82ca9d" />
                    </LineChart>
                }

            </ul>
        </div>
    ) */

    return (
        <div>
            <h2>Station <span id="id"></span></h2>
            <ul class="AreaChart">
                {
                    <AreaChart
                    width={1000}
                    height={400}
                    data={weatherHistory}
                    margin={{
                      top: 10,
                      right: 20,
                      left: 10,
                      bottom: 5,
                    }}>
                      <defs>
                        <linearGradient id="colorF" x1="0" y1="0" x2="0" y2="1">
                          <stop offset="5%" stopColor="#8884d8" stopOpacity={0.8}/>
                          <stop offset="95%" stopColor="#8884d8" stopOpacity={0}/>
                        </linearGradient>
                        <linearGradient id="colorC" x1="0" y1="0" x2="0" y2="1">
                          <stop offset="5%" stopColor="#82ca9d" stopOpacity={0.8}/>
                          <stop offset="95%" stopColor="#82ca9d" stopOpacity={0}/>
                        </linearGradient>
                      </defs>
                      <XAxis dataKey="Date"
                        label={{ value: "Dates", position: "insideBottomRight", offset: 0 }}
                        scale="band" />
                      <YAxis
                        label={{ value: "Temperatures", angle: -90, position: "insideLeft", offset: 0 }}/>
                      <CartesianGrid strokeDasharray="3 3" />
                      <Tooltip />
                      <Area type="monotone" dataKey="Temp" stroke="#8884d8" fillOpacity={1} fill="url(#colorF)" />
                      <Area type="monotone" dataKey="TempC" stroke="#82ca9d" fillOpacity={1} fill="url(#colorC)" />
                      <Legend />
                    </AreaChart>
                }
            </ul>
        </div>
    )

}


export default WeatherData;